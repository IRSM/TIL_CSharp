using System;

public class Variable
{
    // 변수는 식별자의 하나로서, 변수가 선언됐을 때 그와 함께 지정된 형식에 부합하는 저장소가 메모리에 할당돼 값을 담을 수 있는 역할을 한다.
    // 간단히 말해 변수는 지정된 형식의 값을 담을 수 있는 상자이다.
    static void Main()
    {
        // 닷넷에서 변수의 종류는 크게 값 형식, 참조 형식 두 가지 이다.
        void ValueType()
        {
            // 값 형식은 값이 스택영역에 할당되고 변수는 그 메모리를 가지는 프로그램 내의 식별자이다.
            // 값 형식은 string을 제외한 모든 기본 데이터 타입니다.

            // 아래 코드에서 n은 정수를 담을 수 있는 저장소에 대한 식별자로서 변수라고 하고 5는 리터럴이라고 한다.
            // 간단히 말해 n은 int형 정수를 담을 수 있는 상자이다.
            int n = 5;
            // n이라는 변수가 가리키고 있는 스택 영역의 주소에는 5가 지워지고 10이 들어간다.
            n = 10;
        }

        void ReferenceType()
        {
            // 참조 형식은 값을 힙 영역에 저장을 하고, 힙의 데이터 주소를 스택 영역에 저장을 한다.
            // 변수를 호출을 하면 변수의 스택 영역 주소 값에 있는 힙 영역의 데이터 주소를 확인하고 힙 영역의 데이터 주소에 있는 값을 가리킨다.
            // 기본 데이터 타입에서 string과 나중에 배울 배열, 클래스, object 모두 참조 형식이다.

            // 값을 할당하지 않고 string을 선언하면 가리킬 수 있는 힙 영역의 주소가 없는 것이므로 스택 영역에 null을 저장한다.
            string text;
            // text에 Hello를 저장하면 힙 영역에는 Hello가 생성이 되고 text의 스택 영역 주소에 Hello를 가리키는 힙 영역의 주소가 들어간다. 
            text = "Hello";
            // 참조형 변수가 더는 사용되지 않음을 명시하기 위해 null을 할당하기도 한다.
            text = null;
        }

        void DefaultValue()
        {
            // 값 형식을 가리키는 변수는 해당 자료형에 대해 무조건 메모리가 할당되므로 그 메모리 영역에 기본값을 갖게 된다.
            bool isTrue;    //isTrue에는 bool의 기본값인 false 값이 들어간다.
            int n;          //n에는 int의 기본값인 0이 들어간다.
            string text;    //text에는 참조 형식의 기본값인 null이 들어간다.
        }

        void Constant()
        {
            // 상수 변수는 값이 한번 대입되면 그 후로 다른값이 대입될 수 없다.
            // 상수 변수를 선언하기 위해서는 변수를 정의하는 구문에 const만 붙이면 된다.

            const bool isTrue = false;
            isTrue = true;  // 상수 변수는 값을 바꿀 수 없으므로 컴파일 오류가 발생한다.

            const int n = 5;
            n = 10;         // 위와 같은 이유로 컴파일 오류가 발생한다.
        }
    }
}
